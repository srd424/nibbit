#! /usr/bin/env python3

import os
import re
import aria2p


REPO_DIR="/home/steved/src/aux/torrent/map.git"
NIX_EXPR="/home/steved/src/aux/full"
ATTR_PATH="stdenv"
NIX_CMD="nix --extra-experimental-features nix-command"
DL_DIR=os.environ["HOME"] + "/.cache/nibbit"
TRACKER="http://192.168.128.211:6969/announce"
DEBUG=False

os.system("git -C "+REPO_DIR+" pull")

exclude_file=REPO_DIR + "/.git/info/exclude"

if not re.search('\.aria\.gid',open(exclude_file).read()):
	open(exclude_file,"a").write("*.aria.gid")

print(DL_DIR)

aria2 = aria2p.API(aria2p.Client())

store_hash=re.split("[/-]",os.popen(NIX_CMD + " derivation show -f " + NIX_EXPR + " " + ATTR_PATH + \
	"| jq -r 'first(.[]).outputs.out.path'").read().rstrip())[3]

def dbg(s):
	if DEBUG:
		print(s)

def to_dir(hash):
	return hash[0] + "/" + hash

seen = {}

def proc_hash(hash):
	dbg("processing " + hash)
	if hash in seen:
		return
	seen[hash] = True

	print(aria2.add_torrent(REPO_DIR + "/" + to_dir(hash) + ".torrent",
		None, { "dir": DL_DIR, "bt-tracker": TRACKER }).gid)

	narinfo=REPO_DIR + "/" + to_dir(hash) + ".narinfo"
	dbg("reading" + narinfo)
	ref_list = dict(map(lambda l: str.split(l, ": "), open(narinfo).read().splitlines()))['References']
	if ref_list == "":
		return
	for ref in ref_list.split(" "):
		dbg("processing ref '"+ref+"'")
		ref_hash=ref.split("-")[0]
		if ref_hash != hash:
			proc_hash(ref_hash)

proc_hash(store_hash)
exit(0)

